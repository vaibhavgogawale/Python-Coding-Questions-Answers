1.Basic Counting: Write a while loop that counts from 1 to 10 and prints each number. 

# Initializing i 
i = 1

while i<=10:
	print(i)
	i+=1

****************************************************************************************************************************************************************
2.Create a program that asks the user to enter a number, and then use a while loop to count 
down from that number to 1, printing each value. 

# Ask the user to enter a number
num = int(input("Enter a number to count down from: "))

# Count down using while loop
while num >= 1:
    print(num)
    num -= 1

****************************************************************************************************************************************************************
3. Write a while loop that calculates the sum of even numbers from 1 to 100. 

# Initialize variables
num = 1
total = 0

# Loop from 1 to 100
while num <= 100:
    if num % 2 == 0:
        total += num
    num += 1

# Print the result
print("Sum of even numbers from 1 to 100 is:", total)

****************************************************************************************************************************************************************
4. Create a simple number guessing game using a while loop. Generate a random number and have the user guess it, 
giving hints like "too high" or "too low" until they guess correctly. 

import random

# Generate a random number between 1 and 10
secret_number=random.randint(1,10)

# Initialize guess
guess=None

print("Guess the number (between 1 and 10):")

# Start guessing loop
while guess != secret_number:
    guess=int(input("Enter your guess: "))

    if guess < secret_number:
        print("Too low! Try again.")
    elif guess > secret_number:
        print("Too high! Try again.")
    else:
        print("Congratulations! You guessed the correct number.")

****************************************************************************************************************************************************************
5.Use a while loop to calculate the factorial of a given number. 

# Ask the user for a number
num = int(input("Enter a number to calculate its factorial: "))

# Initialize variables
factorial = 1
i = 1

# Calculate factorial using while loop
while i <= num:
    factorial *= i
    i += 1

# Display the result
print(f"Factorial of {num} is: {factorial}")

****************************************************************************************************************************************************************
6.Write a while loop that prints all even numbers between 1 and 50.

num = 1

while num<=50:
	if num%2 == 0:
		print(num)
	num += 1

****************************************************************************************************************************************************************
7.Create a program that calculates the sum of the digits of a given integer using a while loop. 

# Ask the user to enter an integer
num = int(input("Enter an integer: "))

# Make a copy of the number if you want to preserve the original
original_num = num

# Initialize sum
digit_sum = 0

# Use while loop to extract and add digits
while num > 0:
    digit = num % 10         # Get the last digit
    digit_sum += digit       # Add it to the sum
    num = num // 10          # Remove the last digit

# Display result
print(f"Sum of digits of {original_num} is: {digit_sum}")

****************************************************************************************************************************************************************
8.Generate a multiplication table for a given number using a while loop. 

# Ask the user to enter a number
num = int(input("Enter a number to generate its multiplication table: "))

# Initialize counter
i = 1

# Generate multiplication table using while loop
while i <= 10:
    print(f"{num} x {i} = {num * i}")
    i += 1

****************************************************************************************************************************************************************
9.Write a program to find all the factors of a given number using a while loop. 

# Ask the user to enter a number
num = int(input("Enter a number to find its factors: "))

# Initialize the counter
i = 1

print(f"Factors of {num} are:")

# Use while loop to find and print factors
while i <= num:
    if num % i == 0:
        print(i)
    i += 1

****************************************************************************************************************************************************************
10.Implement a program to reverse a given number using a while loop. 

# Ask the user to enter a number
num = int(input("Enter a number to reverse: "))

# Initialize reversed number
reversed_num = 0

# Store the original number (optional, for display)
original_num = num

# Use while loop to reverse the number
while num > 0:
    digit = num % 10
    reversed_num = reversed_num * 10 + digit
    num = num // 10

# Display the result
print(f"Reversed number of {original_num} is {reversed_num}")

****************************************************************************************************************************************************************
11.Create a program that prompts the user to enter a password. Keep asking until they enter the correct password. 

# Set the correct password
correct_password = "12345"

# Initialize user input
entered_password = ""

# Keep asking until correct password is entered
while entered_password != correct_password:
    entered_password = input("Enter the password: ")
    if entered_password != correct_password:
        print("Incorrect password. Try again.")

print("Access granted.")

****************************************************************************************************************************************************************
12.Write a program using a while loop to generate the first n terms of the Fibonacci sequence. 

# Ask the user for number of terms
n = int(input("Enter the number of Fibonacci terms to generate: "))

# Initialize the first two terms
a, b = 0, 1
sum = 0

# Print Fibonacci sequence using while loop
print("Fibonacci sequence:")
while sum <= n:
    print(a)
    a = b 
	b = sum
    sum = a+b

****************************************************************************************************************************************************************
13.Build a program that checks if a given number is prime using a while loop. 

# Ask the user for a number
num = int(input("Enter a number to check if it's prime: "))

# Handle numbers less than 2
if num < 2:
    print(f"{num} is not a prime number.")
else:
    i = 2
    is_prime = True

    # Check divisibility using while loop
    while i <= num // 2:
        if num % i == 0:
            is_prime = False
            break
        i += 1

    # Output result
    if is_prime:
        print(f"{num} is a prime number.")
    else:
        print(f"{num} is not a prime number.")

****************************************************************************************************************************************************************
14.Create a program that checks if a given word or phrase is a palindrome (reads the same forwards and backwards) using a while loop. 

word = input("Enter a word: ")

start = 0
end = len(word) - 1

is_palindrome = True

while start < end:
    if word[start] != word[end]:
        is_palindrome = False
        break
    start += 1
    end -= 1

if is_palindrome:
    print("It's a palindrome.")
else:
    print("It's not a palindrome.")

****************************************************************************************************************************************************************
15.Write a program to generate the first n rows of Pascal's Triangle using while loops.

n = int(input("Enter the number of rows for Pascal's Triangle: "))

row = 0

while row < n:
    num = 1
    space = n - row - 1
    
    # Print leading spaces for triangle shape
    while space > 0:
        print(" ", end=" ")
        space -= 1

    col = 0
    while col <= row:
        print(num, end="   ")
        num = num * (row - col) // (col + 1)
        col += 1
    
    print()
    row += 1

****************************************************************************************************************************************************************
16.Create a program that converts a given integer into words (e.g., 123 -> "one hundred twenty-three") using a while loop. 



****************************************************************************************************************************************************************
17.Write a program to reverse a given string using a while loop. 



****************************************************************************************************************************************************************
18.Implement a program to find the greatest common divisor of two numbers using a while loop and the Euclidean algorithm. 
19.Create a program that converts a binary number (entered as a string) to its decimal equivalent using a while loop. 
20. Write a program that prints all prime numbers between 1 and 100 using a while loop 
21.Implement a program to calculate the result of raising a number to a given power using a 
while loop, without using the built-in exponentiation operator. 
22.Implement the Newton-Raphson method to calculate the square root of a number using a while loop. 
23. Write a program to explore the Collatz conjecture for a given starting number. Count how many iterations it takes to reach 1. 
24. Create a program that calculates and prints the prime factorization of a given number using a while loop. 
25.Build a program that searches for a specific word in a text using a while loop. Provide the index of the word's first occurrence 
26.Generate the Farey sequence of order n using a while loop. The Farey sequence is a list of 
all simplified fractions between 0 and 1 with denominators less than or equal to n. 
27. Implement matrix multiplication (matrix dot product) using nested while loops. 
28.Write a program to calculate the value of the Ackermann function for given inputs (m, n) 
using a while loop. The Ackermann function is a recursive function. 
29.Given an unsorted array of integers, find the length of the longest consecutive elements sequence using a while loop. 
30.Implement a Sudoku solver using a while loop and backtracking algorithm to solve a Sudoku puzzle